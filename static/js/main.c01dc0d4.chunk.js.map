{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["currentFrame","index","toString","padStart","html","document","documentElement","App","canvasRef","useRef","imgRef","Image","timeRef","Date","currentFrameRef","startFrameRef","destinationFrameRef","animationIsOn","animate","context","timeElapsed","current","timeProgress","x","Math","floor","pow","updateImage","requestAnimationFrame","src","drawImage","useEffect","i","canvas","width","height","getContext","onload","window","addEventListener","scrollFraction","scrollTop","scrollHeight","innerHeight","frameIndex","max","min","frameCount","id","ref","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"kMAIMA,G,WAAe,SAACC,GAAD,+IAC+GA,EAAMC,WAAWC,SAAS,EAAG,KAD5I,UAoBfC,EAAOC,SAASC,gBAwEPC,MApEf,WACE,IAAMC,EAAYC,iBAAY,MACxBC,EAASD,iBAAY,IAAIE,OACzBC,EAAUH,iBAAa,IAAII,MAC3BC,EAAkBL,iBAAe,GACjCM,EAAgBN,iBAAe,GAC/BO,EAAsBP,iBAAe,GACrCQ,EAAgBR,kBAAgB,GAEhCS,EAAU,SAAVA,EAAWC,GACf,IACMC,GADY,IAAIP,MACMD,EAAQS,QAC9BC,EAAeF,EAdD,IAepB,GAAIA,EAfgB,IAgBlBH,EAAcI,SAAU,MAD1B,CAIA,IA7BkBE,EA6BZvB,EAAewB,KAAKC,OA7BRF,EA6B2BD,GA5BxC,EAAIE,KAAKE,IAAI,EAAIH,EAAG,KA4BqCP,EAAoBK,QAAUN,EAAcM,SAAWN,EAAcM,UACnIJ,EAAcI,SAAU,EACxBM,EAAYR,EAASnB,GACrB4B,uBAAsB,kBAAMV,EAAQC,QAGhCQ,EAAc,SAACR,EAAclB,GACjCa,EAAgBO,QAAUpB,EAC1BS,EAAOW,QAAQQ,IAAM7B,EAAaC,GAClCkB,EAAQW,UAAUpB,EAAOW,QAAS,EAAG,IAqCvC,OAlCAU,qBAAU,WAGR,IAAI,IAAIC,EAAI,EAAGA,GAnCA,IAmCiBA,IAAK,EAChB,IAAIrB,OACZkB,IAAM7B,EAAagC,GAEhC,IAAMC,EAASzB,EAAUa,QACzB,GAAIY,EAAQ,CACVA,EAAOC,MAAQ,KACfD,EAAOE,OAAS,IAChB,IAAMhB,EAAUc,EAAOG,WAAW,MAClC1B,EAAOW,QAAQQ,IAAM7B,EAAac,EAAgBO,SAClDX,EAAOW,QAAQgB,OAAO,WACpBlB,EAAQW,UAAUpB,EAAOW,QAAS,EAAG,IAEvCiB,OAAOC,iBAAiB,UAAU,WAChC,IAEMC,EAFYpC,EAAKqC,YACDrC,EAAKsC,aAAeJ,OAAOK,aAAe,GAE1DC,EAAapB,KAAKqB,IAAI,EAC1BrB,KAAKsB,IACHC,IACAvB,KAAKC,MAvDE,IAuDIe,KAEfxB,EAAoBK,QAAUuB,EACzB3B,EAAcI,UACjBT,EAAQS,QAAU,IAAIR,KACtBE,EAAcM,QAAUP,EAAgBO,QACxCO,uBAAsB,kBAAMV,EAAQC,aAIzC,IAED,wBAAQ6B,GAAG,iBAAiBC,IAAKzC,KC9EtB0C,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFxD,SAASyD,eAAe,SAM1BZ,K","file":"static/js/main.c01dc0d4.chunk.js","sourcesContent":["import React, {useRef, useEffect} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nconst currentFrame = (index:number):string => (\n  `https://www.apple.com/105/media/us/airpods-pro/2019/1299e2f5_9206_4470_b28e_08307a42f19b/anim/sequence/large/01-hero-lightpass/${index.toString().padStart(4, '0')}.jpg`\n)\n\nconst easeOutExpo = (x: number): number => {\n  return x === 1 ? 1 : 1 - Math.pow(2, -10 * x);\n};\n\nconst easeOutQuint = (x: number): number => {\n  return 1 - Math.pow(1 - x, 5);\n}\n\nconst easeOutQuart = (x: number): number => {\n  return 1 - Math.pow(1 - x, 4);\n}\n\nconst easeOutCubic = (x: number): number => {\n  return 1 - Math.pow(1 - x, 3);\n}\n\nconst html = document.documentElement;\nconst frameCount = 147;\nconst animateDuration = 450; //millisecond\n\nfunction App() {\n  const canvasRef = useRef<any>(null);\n  const imgRef = useRef<any>(new Image());\n  const timeRef = useRef<Date>(new Date());\n  const currentFrameRef = useRef<number>(1);\n  const startFrameRef = useRef<number>(1);\n  const destinationFrameRef = useRef<number>(1);\n  const animationIsOn = useRef<Boolean>(false);\n\n  const animate = (context:any) => {\n    const now: Date = new Date();\n    const timeElapsed = +now - +timeRef.current;\n    const timeProgress = timeElapsed/animateDuration;\n    if (timeElapsed > animateDuration) {\n      animationIsOn.current = false;\n      return;\n    }\n    const currentFrame = Math.floor(easeOutQuart(timeProgress) * (destinationFrameRef.current - startFrameRef.current) + startFrameRef.current);\n    animationIsOn.current = true;\n    updateImage(context, currentFrame);\n    requestAnimationFrame(() => animate(context))\n  }\n\n  const updateImage = (context: any, index: number) => {\n    currentFrameRef.current = index;\n    imgRef.current.src = currentFrame(index);\n    context.drawImage(imgRef.current, 0, 0);\n  }\n\n  useEffect(() => {\n    //preload images\n    //TODO: there must be a better way\n    for(let i = 0; i <= frameCount; i++) {\n      const preloadImg = new Image();\n      preloadImg.src = currentFrame(i);\n    }\n    const canvas = canvasRef.current;\n    if (canvas) {\n      canvas.width = 1158;\n      canvas.height = 770;\n      const context = canvas.getContext('2d');\n      imgRef.current.src = currentFrame(currentFrameRef.current);\n      imgRef.current.onload=function(){\n        context.drawImage(imgRef.current, 0, 0);\n      }\n      window.addEventListener('scroll', () => {\n        const scrollTop = html.scrollTop;\n        const maxScrollTop = (html.scrollHeight - window.innerHeight) / 4;\n        const scrollFraction = scrollTop / maxScrollTop;\n        const frameIndex = Math.max(1,\n          Math.min(\n            frameCount - 1,\n            Math.floor(scrollFraction * frameCount)\n        ));\n        destinationFrameRef.current = frameIndex;\n        if (!animationIsOn.current) {\n          timeRef.current = new Date();\n          startFrameRef.current = currentFrameRef.current;\n          requestAnimationFrame(() => animate(context));\n        }\n      })\n    }\n  }, [])\n  return (\n    <canvas id=\"hero-lightpass\" ref={canvasRef} />\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}